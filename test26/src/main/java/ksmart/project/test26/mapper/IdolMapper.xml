<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ksmart.project.test26.mapper.IdolMapper">
   <!-- select List-->
   <select id="selectIdolList"
         parameterType="java.util.Map"
         resultType="ksmart.project.test26.service.idol.Idol">
		SELECT 
        	 idol_id as idolId
         	,idol_name as idolName
		FROM test.idol
      <include refid="search"></include>
		LIMIT #{startRow}, #{pagePerRow}
		<!-- WHERE절을 include 태그로 삽입 -->
   </select>
   
   <!-- select count -->
   <select id="getIdolCount"
         resultType="int"
         parameterType="java.util.Map">
		SELECT COUNT(*) FROM test.idol
		<include refid="search"></include>
		<!-- WHERE절을 include 태그로 삽입 -->
   </select>
   
   <!-- sql code parts -반복되는 sql의 일부를 sql 태그를 이용하여 따로  쓸 수 있다.-->
   <sql id = "search">
   		<choose>
   		<!-- 전체 검색 -->
   		<when test="searchOption == 'all'">
   			<!-- searchOption이 all일때 -->
   			WHERE idol_name LIKE CONCAT('%',#{keyword},'%')
   			<!-- name이 keyword와 같을 때(keyword의 기본값은"":공백 )-->
   		</when>
   		<!-- 부분 검색 -->
   		<otherwise>
   			WHERE #{searchOption} LIKE CONCAT('%',#{keyword},'%')
   			<!-- 검색 조건이 keyword와 같을때, 검색조건(기본값idol_name)과 keyword에 값 부여(ex:아이돌이름) -->
   		</otherwise>
   		</choose>
   </sql>
   
   <!-- select -->
   <select id="getIdol"
         parameterType="int"
         resultType="ksmart.project.test26.service.idol.Idol">
      SELECT
         idol_id as idolId
         ,idol_name as idolName
      FROM idol
      WHERE idol_id = #{idolId}
   </select>
   
   <!-- insert -->
   <insert id="insertIdol"
         parameterType="ksmart.project.test26.service.idol.Idol">
      INSERT INTO idol(
         idol_name)
      VALUES (
         #{idolName}
      )
   </insert>

   <!-- update -->
   <update id="updateIdol"
         parameterType="ksmart.project.test26.service.idol.Idol">
      UPDATE idol
         SET idol_name = #{idolName}
      WHERE idol_Id = #{idolId}
   </update>
   
   <!-- delete -->
   <delete id="deleteIdol"
         parameterType="ksmart.project.test26.service.idol.Idol">
      DELETE
      FROM idol
      WHERE idol_id = #{idolId}
   </delete>

   <!-- idol insert 마지막으로 추가된 idolId값을 가져옴 -->
	<select id="selectLastId" resultType="int">
		select last_insert_id()
	</select>   
	
   <!-- insert file 추가 -->
	<insert id="insertIdolFile" 
			parameterType="ksmart.project.test26.service.idol.IdolFile">
		INSERT INTO
			idol_file(idol_id,file_name,file_ext,file_size)
		VALUE
			(#{idolId},#{fileName},#{fileExt},#{fileSize})
	</insert>
	
	<!-- IdolAndIdolFile 리스트값 파라미터로 받기  -->
	<resultMap id="IdolAndIdolFile" 
		type="ksmart.project.test26.service.idol.IdolAndIdolFile">
		<id column="Idol_id" property="idolId"/>
		<result column="Idol_name" property="idolName"/>
		<collection property="list" ofType="ksmart.project.test26.service.idol.IdolFile">
			<id column="Idol_file_id" property="idolFileId"/>
			<result column="file_name" property="fileName"/>
			<result column="file_ext" property="fileExt"/>
			<result column="file_size" property="fileSize"/>		
		</collection>			
	</resultMap>
	<!-- Idol JOIN IdolFile 조인 쿼리문 -->
		
</mapper>

